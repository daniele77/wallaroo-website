#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

# per doxygen e immagini
compile '/assets/*' do
end

# per tutto il resto
compile '*' do
  if item[:filename] == 'content/index.html'
    # syntax highlighting (dev'essere prima del resto):
    filter :colorize_syntax,
           :colorizers => { :ruby => :coderay, :cpp => :coderay },
           #:coderay    => { :line_numbers => :table }
		   :coderay    => {}
		   #:coderay    => { :css => :style }
    filter :erb
    layout 'home'
    # se voglio i path relativi:
    filter :relativize_paths, :type => :html
  elsif item[:extension] == 'css'
    # don’t filter stylesheets
    # se voglio i path relativi:
    filter :relativize_paths, :type => :css
  elsif item.binary?
    # don’t filter binary items
  else
    # syntax highlighting (dev'essere prima del resto):
    filter :colorize_syntax,
           :colorizers => { :ruby => :coderay, :cpp => :coderay },
           #:coderay    => { :line_numbers => :table }
		   :coderay    => {}
		   #:coderay    => { :css => :style }
    filter :erb
    layout 'default'
    # se voglio i path relativi:
    filter :relativize_paths, :type => :html
  end
end


# file doxygen nella root
route '/assets/*' do
  # /assets/foo.html/ → /foo.html
  item.identifier[7..-2]
end

route '*' do
  if item[:extension] == 'css'
    # Write item with identifier /foo/ to /foo.css
    item.identifier.chop + '.css'
  elsif item[:extension] == 'html' and item.identifier != "/"
    # Write item with identifier /foo/ to /foo.html
    item.identifier.chop + '.html'
  elsif item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + (item[:extension] ? '.' + item[:extension] : '')
  else
	# si può anche togliere...
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :erb
